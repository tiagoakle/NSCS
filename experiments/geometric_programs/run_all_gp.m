clear all
%Runs all GP problems in NSCS
%Saves the results to the table stored in 
% the tex file 'nscs_gp_run_results.tex'

problem_names = {...
'beck751.eo',...
'beck752.eo',...
'beck753.eo',...
'bss1.eo',...
'bss2.eo',...
'car.eo',...
'cx02-100.eo',...
'cx02-200.eo',...
'demb761.eo',...
'demb762.eo',...
'demb763.eo',...
'demb781.eo',...
'demb782.eo',...
'fang88.eo',...
'fiac81a.eo',...
'fiac81b.eo',...
'gp_dave_1.eo',...
'gp_dave_2.eo',...
'gp_dave_3.eo',...
'gptest.eo',...
'isil01.eo',...
'jha88.eo',...
'mra01.eo',...
'mra02.eo',...
'patil1.eo',...
'patil2.eo',...
'patil3.eo',...
'rijc781.eo',...
'rijc782.eo',...
'rijc783.eo',...
'rijc784.eo',...
'rijc785.eo',...
'rijc786.eo',...
'rijc787.eo',...
'varun.eo'};

%Cell array for the results
results = {{'Header','number of variables','number of constraints','number of terms','affine iterations','centering iterations','KKT solves','status'}};

problem_count = size(problem_names,2);
for(j =1:5)
    
    problem_file_name = problem_names{j};
    %Add the path to the file
    problem_file_name = ['./gp/',problem_file_name];

    [AA,bb,cc,num_ter,num_var,num_con] = read_gp(problem_file_name);

    %Results to store: kkt_count,
    %                  centering_iterations,
    %                  affine_iterations,
    %                  status. 

    % Set starting point:
    t00 = 1;
    up0 = ones(num_var,1);
    um0 = ones(num_var,1);
    w00 = -ones(num_ter,1);
    v00 = ones(num_ter,1);  
    y00 = 0.5*ones(num_ter,1);
    
    %Extract the problem data and build the problem structure
    problem = struct;
    problem.A = AA;
    problem.b = bb;
    problem.c = cc;
    
    %Problem parameters
    problem.m =2*num_ter + num_con+1;
    problem.n = 3*num_ter + 2*num_var + 1;
    problem.n_free = 0;
    problem.n_constrained = 2*num_var+1+3*num_ter;
    problem.n_pos       = 2*num_var+1;
    problem.soc_cones   = 0;
    problem.n_soc_cones = 0;
    problem.n_sdp_cones = 0;
    problem.sdp_cones     = 0;
    problem.n_exp_cones   = num_ter;
    problem.n_power_cones = 0;
    
    x0c  = [t00;up0;um0;w00;v00;y00];
    x0f  = [];
    nscs_long_step
    
    %Save to the results array 
    problem_result = {problem_names{j},num_var,num_con,num_ter,state.m_iter,state.centering_iterations,state.kkt_solves,state.exit_reason};
    results = {results{:},problem_result};
 
end

%Clear all but results 
clear -REGEXP '^(?!.*?results).*'
%Save to file
save 'nscs_gp_run_results'
